
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>İş Takip Admin Sistem Yöneticisi</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/jquery-3.7.1.min.js"></script>
    <script src="~/Scripts/gridmvc.js"></script>
    <link href="~/Content/Gridmvc.css" rel="stylesheet" />



</head>
<body>
    <nav class="navbar navbar-expand-md bg-body-secondary">
        <div class="container">
            <a class="navbar-brand" href="#">İş Takip Sistem Yöneticisi</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <!-- 1. boşluk ekranda yazan -->
                    <!-- 2. boşluk Action tektikleniyor gerçekleştiriyoruz. -->
                    <!-- 3. boşluk controller oluşturup buradaki 2. boşluğa yönlendiriyoruz.-->
                    <li class="nav-item">
                        @Html.ActionLink("Anasayfa", "Index", "SistemYoneticisi", new { }, new { @class = "nav-link" })
                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("Birim İşlemleri", "Birim", "SistemYoneticisi", new { }, new { @class = "nav-link" })
                    </li>
                    @Html.ActionLink("Personel İşlemleri", "Index", "Personel", new { }, new { @class = "nav-link" })
                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("Log İşlemleri", "Loglar", "SistemYoneticisi", new { }, new { @class = "nav-link" })
                    </li>


                </ul>
                <!-- Çıkış butonu oluşturuyoruz.-->
                <!-- boş bir new {} oluşturup buton olmasını sağlıyoruz.-->
                <!-- tıklandığında logout daki index e gidecek-->
                <div class="d-flex nav-item">
                    @Html.ActionLink("Çıkış", "Index", "Logout", new { }, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </nav>
    <main role="main" class="container">
        <!-- değişken sayfalar olacak bunu renderbody etiketi ile cağıraçağız  -->
        @RenderBody()

    </main>
</body>
</html>
